;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name ajaxthree.core, :imports nil, :requires {r reagent.core, reagent.core reagent.core, ajax ajax.core, ajax.core ajax.core}, :uses nil, :defs {loaded-stuff {:name ajaxthree.core/loaded-stuff, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 7, :column 1, :end-line 7, :end-column 18, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 7, :column 6, :end-line 7, :end-column 18}}, contacts {:name ajaxthree.core/contacts, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 9, :column 1, :end-line 9, :end-column 14, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 9, :column 6, :end-line 9, :end-column 14}}, handleClick {:protocol-inline nil, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 11, :column 7, :end-line 11, :end-column 18, :arglists (quote ([evt]))}, :name ajaxthree.core/handleClick, :variadic false, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :end-column 18, :method-params ([evt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 1, :fn-var true, :arglists (quote ([evt]))}, add-contact {:protocol-inline nil, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 15, :column 7, :end-line 15, :end-column 18, :arglists (quote ([c]))}, :name ajaxthree.core/add-contact, :variadic false, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :end-column 18, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, new-contact {:protocol-inline nil, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 18, :column 7, :end-line 18, :end-column 18, :arglists (quote ([]))}, :name ajaxthree.core/new-contact, :variadic false, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, contact {:protocol-inline nil, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 32, :column 7, :end-line 32, :end-column 14, :arglists (quote ([c]))}, :name ajaxthree.core/contact, :variadic false, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :end-column 14, :method-params ([c]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 1, :fn-var true, :arglists (quote ([c]))}, contact-list {:protocol-inline nil, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 36, :column 7, :end-line 36, :end-column 19, :arglists (quote ([]))}, :name ajaxthree.core/contact-list, :variadic false, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, root-component {:protocol-inline nil, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 44, :column 7, :end-line 44, :end-column 21, :arglists (quote ([]))}, :name ajaxthree.core/root-component, :variadic false, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, main {:protocol-inline nil, :meta {:file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :line 63, :column 16, :end-line 63, :end-column 20, :export true, :arglists (quote ([]))}, :name ajaxthree.core/main, :variadic false, :file "E:\\sudheer\\clojure\\ajaxthree\\src\\cljs\\ajaxthree\\core.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:ul :placeholder :button :li :value :type :on-click :div :br :input :h1 :on-change :handler :message :span}, :order [:handler :message :div :input :type :placeholder :value :on-change :button :on-click :li :span :h1 :ul :br]}, :doc nil}